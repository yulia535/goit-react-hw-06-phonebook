{"version":3,"sources":["components/ContactList/contactList.module.css","components/Filter/filter.module.css","redux/actions.js","redux/reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","chengeFilter","items","createReducer","id","name","number","actions","state","action","normalizedData","payload","toLowerCase","iterateName","find","contact","includes","undefined","alert","filter","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","ContactForm","handleChenge","e","currentTarget","value","setState","shortid","generate","handleInputChange","preventDefault","props","onSubmit","reset","className","styles","this","inputForm","type","onChange","pattern","required","React","Component","connect","dispatch","data","allItems","normalizedFilter","item","gatFilteredList","onDeteteContact","map","contactListItem","deleteButton","onClick","inputFilter","Phonebook","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dacaf64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactList_contactListItem__1fCUp\",\"deleteButton\":\"contactList_deleteButton__3UHte\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"filter_inputFilter__1p8um\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\n\r\nconst addContact = createAction('phonebook/add');\r\n// const addContact = (data) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         ...data,\r\n//     }\r\n// })\r\nconst deleteContact = createAction('phonebook/delete');\r\n// const deleteContact = (id) => ({\r\n//     type: types.DELETE,\r\n//     payload: id\r\n// })\r\nconst chengeFilter = createAction('phonebook/filter');\r\n// const chengeFilter = (value) => ({\r\n//     type: types.FILTER,\r\n//     payload: value\r\n// })\r\n// eslint-disable-next-line\r\nexport default  {addContact, deleteContact, chengeFilter}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport actions from './actions'\r\n\r\nconst initialState = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },]\r\n\r\nconst addContacts = (state, action) => {\r\n    const normalizedData = action.payload.name.toLowerCase();\r\n    \r\n        const iterateName = state.find(contact =>\r\n            contact.name.toLowerCase().includes(normalizedData),\r\n        );\r\n        if (iterateName === undefined) {\r\n            return [...state, action.payload];\r\n        } else {\r\n            alert(`${iterateName.name} is already in contacts`);\r\n            return state;\r\n        }\r\n};\r\n      \r\nconst items = createReducer(initialState, {\r\n    [actions.addContact]: addContacts,\r\n    [actions.deleteContact]:(state, action) => state.filter(({id}) => id !== action.payload)\r\n})\r\nconst filter = createReducer('', {\r\n    [actions.chengeFilter]: (_, action) => action.payload,\r\n})\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n\r\n\r\n// const items = (state = initialState , {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             {\r\n               \r\n//              const normalizedData = payload.name.toLowerCase();\r\n    \r\n//             const iterateName = state.find(contact =>\r\n//              contact.name.toLowerCase().includes(normalizedData),\r\n//              );\r\n//     if (iterateName === undefined) {\r\n//      return [...state, payload];\r\n//     } else {\r\n//         alert(`${iterateName.name} is already in contacts`);\r\n//         return state;\r\n    \r\n//   };\r\n//             }\r\n                \r\n            \r\n//         case types.DELETE:\r\n//             return state.filter(({id}) => id !== payload)\r\n//         default:\r\n//             return state;\r\n//     }\r\n    \r\n// }\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.FILTER:\r\n//             return  payload;\r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n","\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport contactsReducer from './reducer'\r\nimport logger from 'redux-logger'\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\n \r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer\r\n    },\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n    middleware,\r\n})\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport actions from '..//../redux/actions'\r\nimport shortid from 'shortid';\r\nimport styles from '../ContactForm/contactForm.module.css';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChenge = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value, id: shortid.generate() });\r\n  };\r\n  handleInputChange = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', id: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={styles.ContactForm} onSubmit={this.handleInputChange}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className={styles.inputForm}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChenge}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className={styles.inputForm}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChenge}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(actions.addContact(data))\r\n})\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '..//../redux/actions';\r\nimport styles from '../ContactList/contactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeteteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={styles.contactListItem} key={id}>\r\n        <span>\r\n          {name}:{number}\r\n        </span>\r\n\r\n        <button\r\n          className={styles.deleteButton}\r\n          onClick={() => onDeteteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n  onDeteteContact: PropTypes.func,\r\n};\r\n\r\nconst gatFilteredList = (allItems, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allItems.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter),\r\n  ); \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {items, filter } = state.contacts;\r\nconst filteredList = gatFilteredList(items, filter)\r\n  return {\r\n    contacts: filteredList,\r\n} \r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeteteContact: (id) => dispatch(actions.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../Filter/filter.module.css';\r\nimport actions from '..//../redux/actions'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, handleChenge }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.inputFilter}\r\n      type=\"text\"\r\n      // name=\"name\"\r\n      value={filter}\r\n      onChange={handleChenge}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      required\r\n    />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n    handleChenge: PropTypes.func,\r\n};\r\n // const { contacts, filter } = this.state;\r\n    // const normalizedFilter = filter.toLowerCase();\r\n    // const filteredList = contacts.filter(contact =>\r\n    //   contact.name.toLowerCase().includes(normalizedFilter),\r\n    // );\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChenge: (e) => dispatch(actions.chengeFilter(e.currentTarget.value)),\r\n});\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nconst Phonebook =() => (\r\n  \r\n      <div>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm  />\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter />\r\n        \r\n        <ContactList/>\r\n      </div>\r\n  \r\n  \r\n)\r\nexport default Phonebook;\r\n\r\n\r\n// class Phonebook extends React.Component {\r\n//   state = {\r\n//     // contacts: [\r\n//       // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     // ],\r\n//     // filter: '',\r\n//   };\r\n//   // componentDidUpdate(prevProps, prevState) {\r\n//   //   if (this.state.contacts !== prevState.contacts) {\r\n//   //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//   //   }\r\n//   // }\r\n\r\n//   // componentDidMount() {\r\n//   //   const contacts = localStorage.getItem('contacts');\r\n    \r\n//   //   if (contacts !== null) {\r\n//   //     const parsedContscts = JSON.parse(contacts);\r\n//   //     this.setState({ contacts: parsedContscts });\r\n//   //   }\r\n//   // }\r\n\r\n//   // addContact = data => {\r\n//   //   const normalizedData = data.name.toLowerCase();\r\n    \r\n//   //   const iterateName = this.state.contacts.find(contact =>\r\n//   //     contact.name.toLowerCase().includes(normalizedData),\r\n//   //   );\r\n//   //   if (iterateName === undefined) {\r\n//   //     this.setState(prevState => ({\r\n//   //       contacts: [data, ...prevState.contacts],\r\n//   //     }));\r\n//   //   } else {\r\n//   //     return alert(`${iterateName.name} is already in contacts`);\r\n//   //   }\r\n//   // };\r\n\r\n\r\n//   // deleteContact = contactId => {\r\n//   //   this.setState(prevState => ({\r\n//   //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//   //   }));\r\n//   // };\r\n//   // chengeFilter = e => {\r\n//   //   this.setState({ filter: e.currentTarget.value });\r\n//   // };\r\n//   render() {\r\n   \r\n//     return (\r\n//       <div>\r\n//         <h1>Phonebook</h1>\r\n\r\n//         <ContactForm  />\r\n//         <h2>Contacts</h2>\r\n\r\n//         <Filter />\r\n        \r\n//         <ContactList/>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\nimport Phonebook from './components/Phonebook/Phonebook';\n\nconst App = () => (\n  <div>\n    <Phonebook />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n// import './index.css';\nimport App from './App';\n// import Counter from './components/counter/Counter';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n  <App />\n</Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"contactForm_ContactForm__3FABl\",\"inputForm\":\"contactForm_inputForm__2OucQ\"};"],"sourceRoot":""}